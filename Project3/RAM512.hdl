// File: RAM512.hdl
// Author: Ian Stephenson
// Date: 02/20/2020
// Section: 510 
// E-mail: ims43@tamu.edu 
// Description: implementation of the 512x16 bit ram

// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
	DMux(in=load, sel=address[8], a=in1, b=in2);
	DMux4Way(in=in1, sel[0]=address[6], sel[1]=address[7], a=a1, b=b1, c=c1, d=d1);
	DMux4Way(in=in2, sel[0]=address[6], sel[1]=address[7], a=a2, b=b2, c=c2, d=d2);
	
	RAM64(in=in, load=a1, address=address[0..5], out=out1);
	RAM64(in=in, load=b1, address=address[0..5], out=out2);
	RAM64(in=in, load=c1, address=address[0..5], out=out3);
	RAM64(in=in, load=d1, address=address[0..5], out=out4);
	RAM64(in=in, load=a2, address=address[0..5], out=out5);
	RAM64(in=in, load=b2, address=address[0..5], out=out6);
	RAM64(in=in, load=c2, address=address[0..5], out=out7);
	RAM64(in=in, load=d2, address=address[0..5], out=out8);
	
	Mux4Way16(a=out1, b=out2, c=out3, d=out4, sel[0]=address[6], sel[1]=address[7], out=fOut1);
	Mux4Way16(a=out5, b=out6, c=out7, d=out8, sel[0]=address[6], sel[1]=address[7], out=fOut2);
	Mux16(a=fOut1, b=fOut2, sel=address[8], out=out);
}