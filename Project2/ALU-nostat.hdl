// File: ALU-nostat.hdl
// Name: Ian Stephenson
// Date: 2/11/2020
// Section: 510
// Email: ims43@tamu.edu
// Description: Implementation of the ALU without the status bits

// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not
// if (f == 1)  set out = x + y  // integer 2's complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not
// if (out == 0) set zr = 1
// if (out < 0) set ng = 1

CHIP ALU-nostat {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16]; // 16-bit output

    PARTS:
	
	// handle zx, 0 x values
	Not16(in=x, out=x0);
	And16(a=x, b=x0, out=xZeroed);
	Mux16(a=x, b=xZeroed, sel=zx, out=zx0);
	
	// handle nx, pass zx'd values
	Not16(in=zx0, out=negX);
	Mux16(a=zx0, b=negX, sel=nx, out=nx0);
	
	// handle zy, 0 y values
	Not16(in=y, out=y0);
	And16(a=y, b=y0, out=yZeroed);
	Mux16(a=y, b=yZeroed, sel=zy, out=zy0);
	
	// handle ny, pass zy'd values
	Not16(in=zy0, out=negY);
	Mux16(a=zy0, b=negY, sel=ny, out=ny0);
	
	// handle function controller, pass nx'd and ny'd values
	Add16(a=nx0, b=ny0, out=addXY);
	And16(a=nx0, b=ny0, out=andXY);
	Mux16(a=andXY, b=addXY, sel=f, out=f0);
	
	// handle the not output, output final result through mux
	Not16(in=f0, out=nOut);
	Mux16(a=f0, b=nOut, sel=no, out=out);
}